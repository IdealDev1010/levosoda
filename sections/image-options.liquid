{% liquid
  assign section_anchor_id = section.settings.section_anchor_id | handleize

  assign image = section.settings.image
  assign image_tab = section.settings.image_tab | default: image
  assign image_mob = section.settings.image_mob | default: image_tab

  assign layout = section.settings.layout
  assign headline = section.settings.headline
  assign text = section.settings.text

  assign button_url = section.settings.button_url
  assign button_text = section.settings.button_text
  assign button_type = section.settings.button_type

  assign blocks = section.blocks

  assign pt_mob = section.settings.pt_mob
  assign pb_mob = section.settings.pb_mob
  assign pt_tab = section.settings.pt_tab
  assign pb_tab = section.settings.pb_tab
  assign pt_desk = section.settings.pt_desk
  assign pb_desk = section.settings.pb_desk
%}

{% render 'css-variables-setter' %}

{% render 'section-paddings',
  section_id: section.id,
  pt_mob: pt_mob,
  pb_mob: pb_mob,
  pt_tab: pt_tab,
  pb_tab: pb_tab,
  pt_desk: pt_desk,
  pb_desk: pb_desk
%}

<div
  id="{{ section_anchor_id }}"
  data-section-id="{{ section.id }}"
  class="bg-sc-bg-primary text-sc-title"
>
  <div
    class="
       smD:items-center smD:grid-cols-2 smD:gap-x-15 container grid max-w-[1440px] grid-cols-1 2xl:px-[180px]
      {% if layout == 'container' -%}
        xl:grid-cols-[minmax(0,450px)_minmax(0,1fr)]
      {%- elsif layout == 'container_reverse' -%}
        xl:grid-cols-[minmax(0,1fr)_minmax(0,450px)]
      {%- endif -%}
    "
  >
    <div class="pt-12.5 smD:p-0 relative {% if layout contains 'reverse' %}smD:order-1 {% endif %}">
      <div>
        {% capture image_tag %}
            {% assign img_class = img_size | append: ' h-full w-full object-cover object-center duration-300 ease-in-out' %}
            {% if image %}
                <picture>
                    <source srcset="{{ image | image_url: width: 1200 }}" media="(min-width: 1150px)">
                    <source srcset="{{ image_tab | image_url: width: 900 }}" media="(min-width: 740px)">
                    <source srcset="{{ image_mob | image_url: width: 740 }}" media="(max-width: 740px)">
                    <img
                        class="{{ img_class }}"
                        src="{{ image | image_url: width: image.width }}"
                        alt="{{ image.alt | escape }}"
                        loading="lazy"
                        width="{{ image.width }}"
                        height="{{ image.height }}"
                    >
                </picture>
            {% else %}
                {% assign img_class = img_class | append: ' bg-white' %}
                {{ 'lifestyle-2' | placeholder_svg_tag: img_class }}
            {% endif %}
        {% endcapture %}

        {% if button_url != blank %}
          <a href="{{ button_url }}">
            {{ image_tag }}
          </a>
        {% else %}
          {{ image_tag }}
        {% endif %}
      </div>
    </div>
    <div class="smD:py-10 2xl:py-15 smD:text-left smD:order-none -order-1 text-center">
      {% if headline %}
        <div class="mb-4 overflow-hidden lg:mb-5">
          <h3
            class="animate__animated font-primary text-title-sm lg:text-title-xl font-bold opacity-0 lg:leading-[1.3]"
            x-intersect="$el.classList.add('animate__fadeInUp')"
          >
            {{ headline }}
          </h3>
        </div>
      {% endif %}
      {% if text %}
        <div class="overflow-hidden">
          <div
            class="animate__animated font-secondary eag-delay-500ms text-sc-body-primary rte text-base opacity-0"
            x-intersect="$el.classList.add('animate__fadeInUp')"
          >
            {{ text }}
          </div>
        </div>
      {% endif %}
      {% if blocks.size > 0 %}
        <div class="my-7.5 lg:my-12.5 smD:max-w-none smD:justify-start 2k:gap-x-5 flex flex-wrap items-baseline justify-center gap-x-2 gap-y-5 md:gap-y-10 xl:gap-x-3">
          {% for block in blocks %}
            {% liquid
              assign icon = block.settings.icon
              assign text = block.settings.text
            %}
            <div
              class="animate__animated eag-custom-delay flex w-[calc(25%-8px)] scale-75 flex-col items-center space-y-2 opacity-0 transition duration-500 ease-in-out md:space-y-4 xl:w-[calc(25%-20px)]"
              x-intersect.threshold.100.once="$el.classList.remove('opacity-0', 'scale-75')"
              style="--eag-custom-delay: {{- forloop.index | append: '00ms' }}"
            >
              {% if icon != blank %}
                <div class="max-w-[50px] md:max-w-20">
                  {{
                    icon
                    | image_url: width: 160
                    | image_tag: loading: 'lazy', alt: text, class: 'w-full h-full object-contain'
                  }}
                </div>
                {% if text != blank %}
                  <span class="font-secondary text-link-xm text-center font-bold md:text-base">{{ text }}</span>
                {% endif %}
              {% endif %}
            </div>
          {% endfor %}
        </div>
      {% endif %}
      {% if button_text != blank or button_type == 'prime_btn' %}
        <div
          class="animate__animated eag-delay-800ms smD:justify-start md:mt-7.5 mt-5 flex justify-center opacity-0"
          x-intersect="$el.classList.add('animate__fadeIn')"
        >
          {% if button_type == 'prime_btn' %}
            <div class="w-full max-w-[278px]">
              {% render 'prime-btn', link: button_url %}
            </div>
          {% else %}
            <a
              href="{{ button_url }}"
              class="{% render 'btn-class', btn: button_type %}"
              aria-label="{{ button_text }}"
            >
              <span>
                {{- button_text -}}
              </span>
            </a>
          {% endif %}
        </div>
      {% endif %}
    </div>
  </div>
</div>

{% schema %}
{
  "name": "Image with options",
  "tag": "section",
  "settings": [
    {
      "type": "text",
      "id": "section_anchor_id",
      "label": "Section anchor id",
      "default": "Image with options"
    },
    {
      "type": "color",
      "id": "c-bg-primary",
      "label": "Section background color",
      "default": "#fff"
    },
    {
      "type": "color",
      "id": "c-title",
      "label": "Section title color",
      "default": "#231F20"
    },
    {
      "type": "color",
      "id": "c-body-primary",
      "label": "Section text color",
      "default": "#3A3A3B"
    },
    {
      "type": "header",
      "content": "Image settings"
    },
    {
      "type": "image_picker",
      "id": "image",
      "label": "Desktop image"
    },
    {
      "type": "image_picker",
      "id": "image_tab",
      "label": "Tablet image (optional)"
    },
    {
      "type": "image_picker",
      "id": "image_mob",
      "label": "Mobile image (optional)"
    },
    {
      "type": "header",
      "content": "Content settings"
    },
    {
      "type": "select",
      "id": "layout",
      "label": "Layout type",
      "options": [
        {
          "value": "container",
          "label": "Container"
        },
        {
          "value": "container_reverse",
          "label": "Container reverse"
        }
      ],
      "default": "container"
    },
    {
      "type": "text",
      "id": "headline",
      "label": "Section title",
      "default": "Lorem ipsum is place holder text"
    },
    {
      "type": "richtext",
      "id": "text",
      "label": "Section text",
      "default": "<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore.</p>"
    },
    {
      "type": "header",
      "content": "Button settings"
    },
    {
      "type": "url",
      "id": "button_url",
      "label": "Section button url"
    },
    {
      "type": "text",
      "id": "button_text",
      "label": "Section button text",
      "default": "Button text"
    },
    {
      "type": "select",
      "id": "button_type",
      "label": "Section button type",
      "options": [
        {
          "value": "prime_btn",
          "label": "Amazon prime product link (metaobject)"
        },
        {
          "value": "btn_primary_fill",
          "label": "Primary fill"
        },
        {
          "value": "btn_primary_outline",
          "label": "Primary outline"
        },
        {
          "value": "btn_secondary_fill",
          "label": "Secondary fill"
        },
        {
          "value": "btn_secondary_outline",
          "label": "Secondary outline"
        },
        {
          "value": "link_primary",
          "label": "Link primary"
        },
        {
          "value": "link_secondary",
          "label": "Link secondary"
        }
      ],
      "default": "btn_primary_fill"
    },
    {
      "type": "header",
      "content": "Padding Y settings"
    },
    {
      "type": "number",
      "id": "pt_mob",
      "label": "Mobile padding top in px",
      "default": 0
    },
    {
      "type": "number",
      "id": "pb_mob",
      "label": "Mobile padding bottom in px",
      "default": 0
    },
    {
      "type": "number",
      "id": "pt_tab",
      "label": "Tablet padding top in px",
      "default": 0
    },
    {
      "type": "number",
      "id": "pb_tab",
      "label": "Tablet padding bottom in px",
      "default": 0
    },
    {
      "type": "number",
      "id": "pt_desk",
      "label": "Desktop padding top in px",
      "default": 0
    },
    {
      "type": "number",
      "id": "pb_desk",
      "label": "Desktop padding bottom in px",
      "default": 0
    }
  ],
  "blocks": [
    {
      "name": "block",
      "type": "block",
      "settings": [
        {
          "type": "image_picker",
          "id": "icon",
          "label": "Block icon"
        },
        {
          "type": "text",
          "id": "text",
          "label": "Block text"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Image with options",
      "category": "Repeatable"
    }
  ]
}
{% endschema %}
