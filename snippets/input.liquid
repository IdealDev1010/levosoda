{%- comment -%}
  ----------------------------------------------------------------------------------------------------------------------
  INPUT COMPONENT
  ----------------------------------------------------------------------------------------------------------------------

  This snippet generate an input (or a textarea text field if the "multiline" option is passed

  ********************************************
  Supported variables
  ********************************************

  * name: the HTML name attribute that is used when the field is submitted (required)
  * type: the HTML type to use (such as "email", "password"...). If none is passed, "text" is assumed.
  * value: the default value (if any) for the setting
  * form: if specified, define the form ID linked to this input
  * label: the label to show
  * minlength: an optional min length for input
  * maxlength: an optional max length for input
  * required: if set to true, the "required" attribute is added to the input
  * tabindex: set a custom tabindex attribute
  * autocomplete: a hint to the browser for help autocompletion. List can be found here: https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete#values
  * autocapitalize: a hint for auto capitalization
  * enterkeyhint: an optional hint for indicate the browser which button to show on the virtual keyboard
{%- endcomment -%}

{%- capture id -%}input-{{ section.id }}-{{ 'now' | date: '%N' }}{%- endcapture -%}

{% liquid
  assign text_color = text_color | default: '#231F20'
  assign border_color = border_color | default: '#ED3293'
%}

{%- capture optional_attributes -%}
  {% if form %}form="{{ form }}"{% endif %}
  {% if value and multiline == blank %}value="{{ value }}"{% endif %}
  {% if tabindex %}tabindex="{{ tabindex }}"{% endif %}
  {% if minlength and minlength > 0 %}minlength="{{ minlength }}"{% endif %}
  {% if maxlength and maxlength > 0 %}maxlength="{{ maxlength }}"{% endif %}
  {% if autocomplete %}autocomplete="{{ autocomplete }}"{% endif %}
  {% if autocapitalize %}autocapitalize="{{ autocapitalize }}"{% endif %}
  {% if enterkeyhint %}enterkeyhint="{{ enterkeyhint }}"{% endif %}
  {% if required %}data-rules='["required"{%- if name contains 'email' -%},"email"{%- elsif type contains 'password' -%},"minLength:8"{%- endif -%}{%- if name contains 'password_confirmation' -%},"matchingPassword"{%- endif -%}]'{% endif %}
{%- endcapture -%}

<div
  class="{{ class }}"
  style="color: {{ text_color }}; --ring: {{ border_color }}; {% if input_radius %}--r-input: {{ input_radius }}{% endif %}"
>
  <div class="relative overflow-hidden text-left" {{ block.shopify_attributes }}>
    {%- if multiline != blank -%}
      <textarea
        id="{{ id }}"
        class="rounded-r-input peer w-full resize-none border-none bg-transparent p-4 pb-3 text-base outline-none ring-[2px] ring-inset ring-[var(--ring)] duration-200 ease-in-out"
        is="textarea"
        name="{{ name }}"
        placeholder=" "
        rows="{{ multiline }}"
        {% if x_input or required %}
          @input.debounce="invalidElements['{{ id }}'] = false; {{ x_input }}"
          :class="{ '!text-c-accent-error !ring-c-accent-error': invalidElements['{{ id }}'] }"
        {% endif %}
        {{ optional_attributes -}}
      >{{- value -}}</textarea>
    {%- else -%}
      <input
        style="--input-height: {{ input_height | default: 48 }}px;"
        id="{{ id }}"
        class="
          {%- if submit_input -%}pr-12{%- endif %}
          {%- if input_bg -%}{{- input_bg -}}{%- else -%}bg-transparent{%- endif %}
          rounded-r-input p-4.5 peer h-[var(--input-height)] w-full appearance-none border-none pb-3 text-base outline-none ring-[2px] ring-inset ring-[var(--ring)] duration-200 ease-in-out
        "
        type="{{ type | default: 'text' }}"
        {% if type == 'email' or type == 'tel' %}
          dir="ltr"
        {% endif %}
        name="{{ name }}"
        placeholder=" "
        {% if x_model %}
          x-model="{{ x_model }}"
        {% endif %}
        {% if x_input or required %}
          @input.debounce="invalidElements['{{ id }}'] = false; {{ x_input }}"
          :class="{ '!text-c-accent-error !ring-c-accent-error': invalidElements['{{ id }}'] }"
        {% endif %}
        {{ optional_attributes }}
      >
      {% if submit_input %}
        <button
          aria-label="Submit form"
          type="submit"
          {% if required %}
            :class="{ '!bg-c-accent-error': invalidElements['{{ id }}'] }"
          {% endif %}
          style="background: {{ border_color }}; color: {{ text_color }}"
          class="absolute right-4 top-1/2 flex h-9 w-9 -translate-y-1/2 items-center justify-center rounded-full border-none duration-200 ease-in-out hover:opacity-80"
        >
          {% render 'icon', name: 'input-arrow' %}
        </button>
      {% endif %}
    {%- endif -%}

    {%- if label != blank -%}
      <label
        for="{{ id }}"
        {% if required %}
          :class="{ '!text-c-accent-error': invalidElements['{{ id }}'] }"
        {% endif %}
        class="ml-4.5 pointer-events-none absolute left-0 top-0 flex {% if multiline %} h-auto pt-5 {% else %} h-full{% endif %} {% if submit_input %} w-[calc(100%-70px)]{% else %} w-[calc(100%-16px)]{% endif %} origin-left items-center text-base opacity-90 duration-200 ease-in-out peer-focus:w-full peer-focus:-translate-y-[1rem] peer-focus:scale-[.65] peer-[&:not(:placeholder-shown)]:w-full peer-[&:not(:placeholder-shown)]:-translate-y-[1rem] peer-[&:not(:placeholder-shown)]:scale-[.65] peer-[&:placeholder-shown]:truncate"
      >
        {{- label -}}
      </label>
    {%- endif -%}
  </div>

  {%- if required -%}
    {% render 'input-error-message', id: id, label: label, type: type, name: name %}
  {%- endif -%}
</div>
